type AppConfig {
  timezone: String
  colorscale: String!
  colorPool: [String!]!
  gridZoom: Int!
  loopVideos: Boolean!
  notebookHeight: Int!
  showConfidence: Boolean!
  showIndex: Boolean!
  showLabel: Boolean!
  showTooltip: Boolean!
  useFrameNumber: Boolean!
}

type BrainRun implements Run {
  key: String!
  version: String!
  timestamp: DateTime!
  config: BrainRunConfig!
  viewStages: [String!]!
}

type BrainRunConfig implements RunConfig {
  cls: String!
  embeddingsField: String
  method: String!
  patchesField: String
}

type Dataset {
  id: ID!
  name: String!
  createdAt: Date!
  lastLoadedAt: DateTime!
  persistent: Boolean!
  mediaType: MediaType
  maskTargets: [NamedTargets!]!
  defaultMaskTargets: [Target!]
  sampleFields: [SampleField!]!
  frameFields: [SampleField!]!
  brainMethods: [BrainRun!]!
  evaluations: [EvaluationRun!]!
  appSidebarGroups: [SidebarGroup!]
  version: String!
  viewCls: String
}

type DatasetConnection {
  pageInfo: PageInfo!
  edges: [DatasetEdge!]!
  total: Int!
}

type DatasetEdge {
  node: Dataset!
  cursor: String!
}

"""
Date (isoformat)
"""
scalar Date

"""
Date with time (isoformat)
"""
scalar DateTime

type EvaluationRun implements Run {
  key: String!
  version: String!
  timestamp: DateTime!
  config: EvaluationRunConfig!
  viewStages: [String!]!
}

type EvaluationRunConfig implements RunConfig {
  cls: String!
  classwise: Boolean!
  errorLevel: Int!
  gtField: String!
  predField: String!
  method: String!
}

scalar JSONArray

enum MediaType {
  image
  video
}

type Mutation {
  setDataset(subscription: String!, name: String): Boolean!
  setView(subscription: String!, session: String, view: JSONArray!): JSONArray!
  storeTeamsSubmission: Boolean!
}

type NamedTargets {
  name: String!
  targets: [Target!]!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  datasets(
    search: String
    first: Int = 10
    after: String = null
  ): DatasetConnection!
  colorscale: [[Int!]!]
  config: AppConfig!
  context: String!
  dev: Boolean!
  doNotTrack: Boolean!
  dataset(name: String!, view: JSONArray): Dataset
  teamsSubmission: Boolean!
  uid: String!
  version: String!
}

interface Run {
  key: String!
  version: String!
  timestamp: DateTime!
  config: RunConfig!
  viewStages: [String!]!
}

interface RunConfig {
  cls: String!
}

type SampleField {
  ftype: String!
  path: String!
  subfield: String
  embeddedDocType: String
  dbField: String
}

type SidebarGroup {
  name: String!
  paths: [String!]!
}

type Target {
  target: Int!
  value: String!
}
